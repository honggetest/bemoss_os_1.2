[buildout]
#socket-timeout = 60
develop = .
          lib/clock
          lib/jsonrpc
parts = activate python python-link scripts twistd
        importchecker nose pychecker pyflakes pylint
eggs = volttronlite
versions = versions

[versions]
zc.buildout = >=2.2.0,<3
smap = ==2.0.24c780d

[activate]
recipe = z3c.recipe.template
input = activate.in
output = ${buildout:bin-directory}/activate
prompt = volttron

# The following section creates a stupid python script that doesn't support
# all python options or PYTHONSTARTUP environment variable and it includes
# site packages making it more difficult to spot packages missing in setup.py.
# The python section below fixes these deficiencies.
#[python]
#recipe = zc.recipe.egg
#interpreter = python
#eggs = ${buildout:eggs}

[python]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
scripts = python
entry-points = python=__builtin__:int
extra-paths = /xxx-cut-here
initialization = 
    import os
    argv = [sys.executable, '-sS'] + sys.argv[1:]
    environ = os.environ.copy()
    paths = sys.path[:sys.path.index('/xxx-cut-here')]
    if environ.get('PYTHONPATH'):
        paths.insert(0, environ['PYTHONPATH'])
    environ['PYTHONPATH'] = os.pathsep.join(paths)
    os.execve(sys.executable, argv, environ)
arguments = os.EX_SOFTWARE

[python-link]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = ln -sf python "${buildout:bin-directory}/`${buildout:bin-directory}/${python:scripts} -c 'import sys; print "python{0.major}.{0.minor}".format(sys.version_info)'`"
uninstall_cmds = find "${buildout:bin-directory}" -lname python -delete

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}

[twistd]
recipe = zc.recipe.egg
eggs = twisted
       ${buildout:eggs}
       pyOpenSSl
       smap
scripts = twistd

[importchecker]
recipe = zc.recipe.egg
eggs = importchecker
       ${buildout:eggs}

[nose]
recipe = pbp.recipe.noserunner
eggs = ${buildout:eggs}

[pychecker]
recipe = zc.recipe.egg
eggs = PyChecker
       ${buildout:eggs}
find-links = http://sourceforge.net/projects/pychecker/files/pychecker/0.8.19/pychecker-0.8.19.tar.gz
# This script-rename trick is required to prevent buildout from picking up
# the script included in the package, preventing the initialization and
# entry point from being used.
scripts = xpychecker=pychecker
entry-points = xpychecker=sys:exit
initialization = import imp
    # We import pychecker.checker as if it were the __main__ module.
    # Its main loop runs during the import, so we just exit afterward.
    imp.load_module('__main__', *imp.find_module('checker', [imp.find_module('pychecker')[1]]))

[pyflakes]
recipe = zc.recipe.egg
eggs = pyflakes
       ${buildout:eggs}

[pylint]
recipe = zc.recipe.egg
eggs = pylint
       ${buildout:eggs}
# This script-rename trick is required to prevent buildout from picking up
# the script included in the package, preventing the initialization and
# entry point from being used.
scripts = xpylint=pylint
          xpylint-gui=pylint-gui
          xpyreverse=pyreverse
          xsymilar=symilar
entry-points = xpylint=pylint:run_pylint
               xpylint-gui=pylint:run_pylint_gui
               xpyreverse=pylint:run_pyreverse
               xsymilar=pylint:run_symilar

